import re
from collections import defaultdict

from datasets import load_dataset

dname = "wmt19"

re_pair_ff = re.compile(r'(\S{2,})innen und -?\1(?!innen)(en|e|n)?')
re_pair_mf = re.compile(r'(\S{2,})(?!innen)(\S+)? und -?\1innen')
re_pair_singular_ff = re.compile(r'(\S{2,})in (oder|bzw|bzw\.) -?\1(?!in)(en|s|e)?\b')
re_pair_singular_mf = re.compile(r'(\S{2,})(?!in)(en|s|e)? (oder|bzw|bzw\.) -?\1in\b')


def tag_sentences(batch):
    new_batch = defaultdict(list)
    for ex in batch['translation']:
        if re_pair_ff.search(ex['de']): # Studentinnen und Studenten
            en_mf = '@@M@@ ' + ex['en']
            en_ff = '@@F@@ ' + ex['en']
            de_mf = re_pair_ff.sub(r'\1\2', ex['de'])
            de_ff = re_pair_ff.sub(r'\1innen', ex['de'])
            new_ex_mf = {'de': de_mf, 'en': en_mf}
            new_ex_ff = {'de': de_ff, 'en': en_ff}
            new_batch['translation'].append(new_ex_mf)
            new_batch['translation'].append(new_ex_ff)
        elif re_pair_mf.search(ex['de']): # Studenten und Studentinnen
            en_mf = '@@M@@ ' + ex['en']
            en_ff = '@@F@@ ' + ex['en']
            de_mf = re_pair_mf.sub(r'\1\2', ex['de'])
            de_ff = re_pair_mf.sub(r'\1innen', ex['de'])
            new_ex_mf = {'de': de_mf, 'en': en_mf}
            new_ex_ff = {'de': de_ff, 'en': en_ff}
            new_batch['translation'].append(new_ex_mf)
            new_batch['translation'].append(new_ex_ff)
        elif re_pair_singular_ff.search(ex['de']): # Studentin oder Student (output only female form to preserve agreement)
            en_ff = '@@F@@ ' + ex['en']
            de_ff = re_pair_singular_ff.sub(r'\1in', ex['de'])
            new_ex_ff = {'de': de_ff, 'en': en_ff}
            new_batch['translation'].append(new_ex_ff)
        elif re_pair_singular_mf.search(ex['de']): # Student oder Studentin (output only male form to preserve agreement)
            en_mf = '@@M@@ ' + ex['en']
            de_mf = re_pair_singular_mf.sub(r'\1\2', ex['de'])
            new_ex_mf = {'de': de_mf, 'en': en_mf}
            new_batch['translation'].append(new_ex_mf)
    return new_batch


dataset = load_dataset(dname, 'de-en')
dataset = dataset.map(tag_sentences, batched=True, num_proc=10)
dataset.save_to_disk(f'{dname}-tagged')
